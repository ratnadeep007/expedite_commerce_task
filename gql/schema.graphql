schema {
    query: Query
    mutation: Mutation
}

type Product {
    productId: String!
    name: String!
    description: String!
    category: ProductTaxonomy!
    price: Int!
    stock: Int!
    createdAt: AWSDateTime
    updatedAt: AWSDateTime
}

type ProductTaxonomy {
    taxonomyId: String!
    name: String!
    description: String!
    parentId: String!
    type: String!
    createdAt: AWSDateTime
    updatedAt: AWSDateTime
}

type Error {
    message: String!
    code: String!
    type: String!
}

type ProductResponse {
    data: Product
    error: Error
}

type ProducTaxonomyResponse {
    data: ProductTaxonomy
    error: Error
}

type ProductListResponse {
    data: [Product]
    error: Error
}

type Query {
    getProduct(productId: String!): ProductResponse!
    getProductsByCategory(taxonomyId: String!): ProductListResponse!
    getProductTaxonomy(taxonomyId: String!): ProducTaxonomyResponse!
}

type IdResponse {
    id: String
}

type IdResponseError {
    data: IdResponse
    error: Error
}

type Mutation {
    addProduct(
        name: String!
        description: String!
        price: Int!
        category: String!
        stock: Int!
    ): IdResponseError!
    updateProduct(
        productId: String!
        name: String!
        description: String!
        price: Int!
        category: String!
        stock: Int!
    ): ProductResponse!
    deleteProduct(productId: String): IdResponseError!
    addProductTaxonomy(
        name: String!
        description: String!
        parentId: String
        type: String!
    ): IdResponseError!
    updateProductTaxonomy(
        taxonomyId: String!
        name: String!
        description: String!
        parentId: String
        type: String!
    ): ProducTaxonomyResponse!
    deleteProductTaxonomy(taxonomyId: String): IdResponseError!
}
